/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rommanager.main;

import rommanager.utils.ProgressBar;
import rommanager.utils.Popup;
import java.awt.Point;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import rommanager.gamelist.ProcessRead;

/**
 *
 * @author phramusca ( https://github.com/phramusca/JaMuz/ )
 */
public class RomManagerGUI extends javax.swing.JFrame {

    private final ProgressBar progressBar;
    private static TableModelRomSevenZip tableModel;
    
    /**
     * Creates new form RomManagerGUI
     */
    public RomManagerGUI() {
        initComponents();
        
		jTextFieldPathExport.setText(RomManager.options.get("romset.exportPath"));
		jTextFieldPathSource.setText(RomManager.options.get("romset.sourcePath"));
        
        progressBar = (ProgressBar)jProgressBar1;
        
		jTableRom.setRowHeight(IconBuffer.ICON_HEIGHT);
		
        tableModel = (TableModelRomSevenZip) jTableRom.getModel();
        jTableRom.setRowSorter(null);
		//Adding columns from tableModel. Cannot be done automatically on properties
		// as done, in initComponents, before setColumnModel which removes the columns ...
		jTableRom.createDefaultColumnsFromModel();

		setColumn(0, 220, 220);
        setColumn(1, 100, 300);
		setColumn(2, 100, 800);
		setColumn(3, 100, 200);
		setColumn(4, 100, 150);
		setColumn(5, 100, 50);
		setColumn(6, 100, 100);
		
		DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setVerticalAlignment(SwingConstants.TOP);
        jTableRom.getColumnModel().getColumn(2).setCellRenderer(renderer);
		
		RomManagerOds.readFile(tableModel, progressBar);
		enableFilter();
    }

    private void setColumn(int index, int min, int pref) {
        TableColumn column = jTableRom.getColumnModel().getColumn(index);
		column.setMinWidth(min);
        column.setPreferredWidth(pref);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//    @SuppressWarnings("unchecked");
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListVersions = new javax.swing.JList<>();
        jScrollPaneCheckTags1 = new javax.swing.JScrollPane();
        jTableRom = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldPathExport = new javax.swing.JTextField();
        jButtonOptionSelectFolderExport = new javax.swing.JButton();
        jTextFieldPathSource = new javax.swing.JTextField();
        jButtonOptionSelectFolderSource = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jProgressBar1 = new ProgressBar();
        jButtonReadGameList = new javax.swing.JButton();
        jButtonExtract = new javax.swing.JButton();
        jButtonScanSource = new javax.swing.JButton();
        jLabelAction = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rom Manager");

        jSplitPane1.setDividerLocation(150);

        jScrollPane1.setViewportView(jListVersions);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jTableRom.setAutoCreateColumnsFromModel(false);
        jTableRom.setModel(new TableModelRomSevenZip());
        jTableRom.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableRom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableRomMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRomMouseClicked(evt);
            }
        });
        jScrollPaneCheckTags1.setViewportView(jTableRom);

        jSplitPane1.setRightComponent(jScrollPaneCheckTags1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        jTextFieldPathExport.setEditable(false);

        jButtonOptionSelectFolderExport.setText("Select"); // NOI18N
        jButtonOptionSelectFolderExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOptionSelectFolderExportActionPerformed(evt);
            }
        });

        jTextFieldPathSource.setEditable(false);

        jButtonOptionSelectFolderSource.setText("Select"); // NOI18N
        jButtonOptionSelectFolderSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOptionSelectFolderSourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldPathExport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOptionSelectFolderExport))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldPathSource, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOptionSelectFolderSource)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPathSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOptionSelectFolderSource))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPathExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOptionSelectFolderExport))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Action"));

        jProgressBar1.setString(""); // NOI18N
        jProgressBar1.setStringPainted(true);

        jButtonReadGameList.setText("Read gamelist.xml");
        jButtonReadGameList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadGameListActionPerformed(evt);
            }
        });

        jButtonExtract.setText("Extract");
        jButtonExtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExtractActionPerformed(evt);
            }
        });

        jButtonScanSource.setText("Scan Source"); // NOI18N
        jButtonScanSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonScanSourceActionPerformed(evt);
            }
        });

        jLabelAction.setText("Action: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonScanSource)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonReadGameList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonExtract))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonReadGameList)
                    .addComponent(jButtonExtract)
                    .addComponent(jButtonScanSource))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelAction))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonScanSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonScanSourceActionPerformed
		disableGUI("Listing: ");
		String sourcePath = jTextFieldPathSource.getText();
		File file = new File(sourcePath);
		if(!file.exists()) {
			Popup.warning("Source path does not exist.");
			enableGUI();
			return;
		}
		ProcessList processList = new ProcessList(sourcePath, progressBar, tableModel, new CallBackProcess());
		processList.start();
    }//GEN-LAST:event_jButtonScanSourceActionPerformed

	private class CallBackProcess implements ICallBackProcess {

		@Override
		public void completed() {
			enableGUI();
		}
		
	}
	
	private static void enableFilter() {
		//Enable filter
		if(tableModel.getRowCount()>0) {
			jTableRom.setAutoCreateRowSorter(true);
			TableRowSorter<TableModelRomSevenZip> tableSorter = new TableRowSorter<>(tableModel);
			jTableRom.setRowSorter(tableSorter);
			List <RowSorter.SortKey> sortKeys = new ArrayList<>();

			//   "FileName", "Versions"
			sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
			tableSorter.setSortKeys(sortKeys);
		}
		else {
			jTableRom.setAutoCreateRowSorter(false);
		}
	}
	
    private void jButtonExtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExtractActionPerformed
        int n = JOptionPane.showConfirmDialog(
			this, "Are you sure you want to export roms ?",  //NOI18N
			"Please Confirm",  //NOI18N
			JOptionPane.YES_NO_OPTION);
		if (n == JOptionPane.YES_OPTION) {
			disableGUI("Extraction: ");
			String exportPath = jTextFieldPathExport.getText();
			File file = new File(exportPath);
			if(!file.exists()) {
				enableGUI();
				Popup.warning("Export path does not exist.");
				return;
			}
			ProcessExport processExport = new ProcessExport(exportPath, 
					progressBar, tableModel, new CallBackProcess());
			processExport.start();

			Popup.warning("Disabled for now!");enableGUI();
		}
    }//GEN-LAST:event_jButtonExtractActionPerformed

	private void disableGUI(String text) {
		jLabelAction.setText(text);
		jTableRom.setAutoCreateRowSorter(false);
		jTableRom.setRowSorter(null);
		enableGUI(false);
	}
	
	public void enableGUI() {
		enableGUI(true);
		enableFilter();
	}
	
	private static void enableGUI(boolean enable) {
		jButtonExtract.setEnabled(enable);
		jButtonReadGameList.setEnabled(enable);
		jButtonScanSource.setEnabled(enable);
		
		jButtonOptionSelectFolderExport.setEnabled(enable);
		jButtonOptionSelectFolderSource.setEnabled(enable);
	}
	
    private void jTableRomMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRomMousePressed
        if ( SwingUtilities.isRightMouseButton( evt ) )
        {
            Point p = evt.getPoint();
            int rowNumber = jTableRom.rowAtPoint( p );
            ListSelectionModel model = jTableRom.getSelectionModel();
            model.setSelectionInterval( rowNumber, rowNumber );
        }
    }//GEN-LAST:event_jTableRomMousePressed

    private void jTableRomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRomMouseClicked
        int selectedRow = jTableRom.getSelectedRow(); 		
		if(selectedRow>=0) { 			
			selectedRow = jTableRom.convertRowIndexToModel(selectedRow);
			
			RomSevenZipFile romSevenZipFile = tableModel.getRom(selectedRow);
			DefaultListModel versionsModel = new DefaultListModel();
			int i=0;
			List<Integer> indices=new ArrayList();
			for(RomVersion romVersion : romSevenZipFile.getVersions()) {
				versionsModel.addElement(romVersion);
				if(romVersion.isBest()) {
					indices.add(i);
				}
				i++;
			}
			jListVersions.setModel(versionsModel);
			
			int[] indicesArray = new int[indices.size()];
			for(i = 0; i < indices.size(); i++) { indicesArray[i] = indices.get(i); }
			
			jListVersions.setSelectedIndices(indicesArray);
		}
    }//GEN-LAST:event_jTableRomMouseClicked

    private void jButtonReadGameListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadGameListActionPerformed
		disableGUI("Reading gamelist.xml: ");
		String exportPath = jTextFieldPathExport.getText();
		File file = new File(exportPath);
		if(!file.exists()) {
			enableGUI();
			Popup.warning("Export path does not exist.");
			return;
		}
		ProcessRead processRead = new ProcessRead(exportPath, progressBar, tableModel, new CallBackProcess());
		processRead.start();
    }//GEN-LAST:event_jButtonReadGameListActionPerformed

    private void jButtonOptionSelectFolderExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOptionSelectFolderExportActionPerformed
        String selectedFolder=selectFolder(jTextFieldPathExport.getText());
        if(!selectedFolder.equals("")) {  //NOI18N
			RomManager.options.set("romset.exportPath", selectedFolder);
			RomManager.options.save();
            jTextFieldPathExport.setText(selectedFolder);
        }
    }//GEN-LAST:event_jButtonOptionSelectFolderExportActionPerformed

    private void jButtonOptionSelectFolderSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOptionSelectFolderSourceActionPerformed
		String selectedFolder=selectFolder(jTextFieldPathSource.getText());
        if(!selectedFolder.equals("")) {  //NOI18N
			RomManager.options.set("romset.sourcePath", selectedFolder);
			RomManager.options.save();
            jTextFieldPathSource.setText(selectedFolder);
        }
    }//GEN-LAST:event_jButtonOptionSelectFolderSourceActionPerformed
    
    public static String selectFolder(String defaultFolder) {
		JFileChooser fc = new JFileChooser(defaultFolder);
		fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		int returnVal = fc.showOpenDialog(null);
		if (returnVal == JFileChooser.APPROVE_OPTION) {
            File selFile = fc.getSelectedFile();
			return selFile.getAbsolutePath();
        } else {
			return "";  //NOI18N
        }
	}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | 
				IllegalAccessException | 
				javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RomManagerGUI.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
			RomManagerGUI panel = new RomManagerGUI();
			panel.setLocationRelativeTo(null);
			panel.setExtendedState(RomManagerGUI.MAXIMIZED_BOTH);
			panel.setVisible(true);
		});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton jButtonExtract;
    private static javax.swing.JButton jButtonOptionSelectFolderExport;
    private static javax.swing.JButton jButtonOptionSelectFolderSource;
    private static javax.swing.JButton jButtonReadGameList;
    private static javax.swing.JButton jButtonScanSource;
    private javax.swing.JLabel jLabelAction;
    private javax.swing.JList<String> jListVersions;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private static javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JScrollPane jScrollPaneCheckTags1;
    private javax.swing.JSplitPane jSplitPane1;
    private static javax.swing.JTable jTableRom;
    private static javax.swing.JTextField jTextFieldPathExport;
    private static javax.swing.JTextField jTextFieldPathSource;
    // End of variables declaration//GEN-END:variables
}
